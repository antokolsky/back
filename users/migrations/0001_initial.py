# Generated by Django 5.0.6 on 2024-05-25 21:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunicationMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_phone', models.CharField(blank=True, max_length=12, unique=True, verbose_name='Номер мобильного')),
                ('telegram', models.CharField(blank=True, max_length=255, unique=True, verbose_name='Ник телеграмм')),
                ('whatsapp', models.CharField(blank=True, max_length=12, unique=True, verbose_name='Номер WhatsApp')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ru', models.CharField(max_length=100, unique=True, verbose_name='Название Русское')),
                ('name_en', models.CharField(max_length=100, unique=True, verbose_name='Название Английское')),
                ('iso', models.CharField(blank=True, max_length=10, unique=True, verbose_name='ISO классификация страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ('name_ru',),
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ru', models.CharField(max_length=100, unique=True, verbose_name='Русское название')),
                ('name_en', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Английское название')),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ru', models.CharField(max_length=100, unique=True, verbose_name='Русское название')),
                ('name_en', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Английское название')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('is_seller', models.BooleanField(default=False, verbose_name='Продавец')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ru', models.CharField(max_length=100, verbose_name='Название Русское')),
                ('name_en', models.CharField(max_length=100, verbose_name='Название Английское')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='users.country', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ('name_ru',),
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_ru', models.CharField(blank=True, max_length=100, verbose_name='Имя русское')),
                ('first_name_eng', models.CharField(blank=True, max_length=100, verbose_name='Имя английское')),
                ('last_name_ru', models.CharField(blank=True, max_length=100, verbose_name='Фамилия русская')),
                ('last_name_en', models.CharField(blank=True, max_length=100, verbose_name='Фамилия английская')),
                ('avatar', models.ImageField(default='avatars/default.png', upload_to='avatars/', verbose_name='Аватар')),
                ('about_ru', models.TextField(default='', verbose_name='О себе ru')),
                ('about_en', models.TextField(blank=True, verbose_name='О себе eng')),
                ('address', models.CharField(max_length=255, unique=True, verbose_name='Адрес')),
                ('projects', models.IntegerField(verbose_name='Проект')),
                ('edited_at', models.DateTimeField(auto_now=True, verbose_name='Отредактировано')),
                ('communication_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_info', to='users.communicationmethod', verbose_name='Методы связи')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_info', to='users.country', verbose_name='Страна')),
                ('materials', models.ManyToManyField(related_name='users_info', to='users.material', verbose_name='Стили')),
                ('style', models.ManyToManyField(related_name='users_info', to='users.style', verbose_name='Стили')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
