# Generated by Django 5.0.7 on 2024-07-31 20:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("countries", "0001_initial"),
        ("projects", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CommunicationMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_ru",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Название на русском"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        unique=True,
                        verbose_name="Название на английском",
                    ),
                ),
            ],
            options={
                "verbose_name": "Метод связи",
                "verbose_name_plural": "Методы связи",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Электронная почта"
                    ),
                ),
                (
                    "is_seller",
                    models.BooleanField(default=False, verbose_name="Продавец"),
                ),
                (
                    "personal_account_filled",
                    models.BooleanField(
                        default=False, verbose_name="Заполнена информация в ЛК"
                    ),
                ),
                (
                    "first_name_ru",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Имя русское"
                    ),
                ),
                (
                    "first_name_eng",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Имя английское"
                    ),
                ),
                (
                    "last_name_ru",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Фамилия русская"
                    ),
                ),
                (
                    "last_name_en",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Фамилия английская"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        default="avatars/default.png",
                        upload_to="avatars/",
                        verbose_name="Аватар",
                    ),
                ),
                ("about_ru", models.TextField(default="", verbose_name="О себе ru")),
                ("about_en", models.TextField(blank=True, verbose_name="О себе eng")),
                (
                    "address",
                    models.CharField(max_length=255, unique=True, verbose_name="Адрес"),
                ),
                ("project", models.IntegerField(default=1, verbose_name="Проект")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "edited_at",
                    models.DateTimeField(auto_now=True, verbose_name="Отредактировано"),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="countries.country",
                        verbose_name="Страна",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "materials",
                    models.ManyToManyField(
                        related_name="_material_users",
                        to="projects.material",
                        verbose_name="Материалы",
                    ),
                ),
                (
                    "style",
                    models.ManyToManyField(
                        related_name="style_users",
                        to="projects.style",
                        verbose_name="Стили",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "communication_method",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="users.communicationmethod",
                        verbose_name="Предпочитаемый метод связи",
                    ),
                ),
            ],
            options={
                "verbose_name": "Информация о пользователе",
                "verbose_name_plural": "Информация о пользователях",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
